@Library('deploy-conf') _
node() {
    try {
        String ANSI_GREEN = "\u001B[32m"
        String ANSI_NORMAL = "\u001B[0m"
        String ANSI_BOLD = "\u001B[1m"
        String ANSI_RED = "\u001B[31m"
        String ANSI_YELLOW = "\u001B[33m"
        ansiColor('xterm') {
            stage('checkout repo') {
                cleanWs()
                dir('private') {
                    checkout scm
                }
            }
            stage('deploy') {
                values = docker_params()
                currentWs = sh(returnStdout: true, script: ' pwd').trim()
                ansiblePlaybook = "$currentWs/private/ansible/dikshabot.yml"
                ansibleExtraArgs = "--tags \"${params.tag}\" --extra-vars \"hub_org=$hub_org image_name=$values.image_name image_tag=$values.image_tag\" --vault-password-file /var/lib/jenkins/secrets/vault-pass"
                
                sh """
                    mkdir -p $currentWs/ansible/inventory/env/group_vars
                    ln -s $currentWs/ansible/inventory/env/common.yml $currentWs/ansible/inventory/env/group_vars/env.yml
                """
                values.put('currentWs', currentWs)
                values.put('ansiblePlaybook', ansiblePlaybook)
                values.put('ansibleExtraArgs', ansibleExtraArgs)
                ansible_playbook_run(values)
                archiveArtifacts 'metadata.json'
                currentBuild.description = "Image: ${values.image_tag}, Private: ${params.private_branch}, Public: ${params.branch_or_tag}"
            }
        }
    }
    catch (err) {
        currentBuild.result = "FAILURE"
        throw err
    }
}
