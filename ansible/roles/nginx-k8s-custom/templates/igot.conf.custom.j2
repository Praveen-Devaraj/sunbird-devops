{% if proto=='https' %}
server {
  listen 80;
  listen [::]:80;
  server_name {{ igot_server_name }};
  {#
  custom nginx server config section
  eg:
  nginx_server_config: |
    if ($allowed_country = no) {
        return 444;
    }
  #}
{% if nginx_server_config is defined and nginx_server_config %}
  {{ nginx_server_config | indent( width=4, indentfirst=True)  }}
{% endif %}
  # Limitting open connection per ip
  limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
  return 301 https://{{ igot_server_name }}$request_uri;
}
{% endif %}
server {
{% if proto=='http' %}
  listen                80;
  listen    [::]:80;
{% else %}
  listen                443 ssl;
  ssl_certificate       /etc/secrets-igot/tls.crt;
  ssl_certificate_key   /etc/secrets-igot/tls.key;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
{% endif  %}
  server_name {{ igot_server_name }};
  {#
  custom nginx server config section
  eg:
  nginx_server_config: |
    if ($allowed_country = no) {
        return 444;
    }
  #}
{% if nginx_server_config is defined and nginx_server_config %}
  {{ nginx_server_config | indent( width=4, indentfirst=True)  }}
{% endif %}
  # Limitting open connection per ip
  limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
  proxy_set_header    Host              $host;
  proxy_set_header    X-Real-IP         {{ nginx_client_public_ip_header | d('$remote_addr') }};
  proxy_set_header    X-Forwarded-SSL   on;
  proxy_set_header    X-Forwarded-Proto $scheme;
  ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
  resolver {{ kube_dns_ip }} valid=30s;
  # Mobile Devices Refresh token Endpoints
  location ~* ^/auth/v1/refresh/token  {
    rewrite ^/auth/(.*) /auth/$1 break;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_http_version 1.1;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://kong;
  }
  # Admin API Endpoints for sunbird realm fpr forgot password flow
  location ~ /auth/admin/realms/sunbird/users/ {
    rewrite ^/auth/(.*) /auth/$1 break;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_pass http://keycloak;
  }
  # Sunbird realm keycloak API endpoints
  location ~ /auth/realms/sunbird/(get-required-action-link|login-actions/(action-token|authenticate|required-action)|protocol/openid-connect/(auth|certs|logout|token|userinfo)|.well-known/openid-configuration) {
    rewrite ^/auth/(.*) /auth/$1 break;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_pass http://keycloak;
  }
  # Static Assets for keycloak endpoints with caching
  location ~ /auth/(resources/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css))|welcome-content/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css))) {
    ## Enabling caching
    #proxy_cache_key $proxy_host$request_uri;
    #proxy_cache proxy_cache;
    #add_header X-Proxy-Cache $upstream_cache_status;
    #add_header X-Proxy-Cache-Date $upstream_http_date;
    #proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    #proxy_cache_revalidate on;
    #proxy_cache_background_update on;
    #proxy_cache_lock on;
    #proxy_cache_valid 200 43200;
    rewrite ^/auth/(.*) /auth/$1 break;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_http_version 1.1;
    proxy_pass http://keycloak;
  }
  location /api/ {
    if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "*" ;
            add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
            add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
    }
    if ( $arg_eHVyhwSdt ) {
      set $custom_header "Bearer $arg_eHVyhwSdt";
    }
    if ( $http_authorization ) {
      set $custom_header "$http_authorization";
    }
    include /etc/nginx/defaults.d/compression.conf;
    proxy_set_header Authorization $custom_header;
    rewrite ^/api/(.*) /$1 break;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_http_version 1.1;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://kong;
  }
  # Oauth2 config
  location /oauth2/ {
    set $target http://oauth2-proxy.logging.svc.cluster.local;
    proxy_set_header Host                    $host;
    proxy_set_header X-Real-IP               {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme                $scheme;
    proxy_set_header X-Auth-Request-Redirect $request_uri;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass $target;
  }
  location = /oauth2/auth {
    set $target http://oauth2-proxy.logging.svc.cluster.local;
    proxy_set_header Host             $host;
    proxy_set_header X-Real-IP        {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme         $scheme;
    # nginx auth_request includes headers but not body
    proxy_set_header Content-Length   "";
    proxy_pass_request_body           off;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass $target;
  }
  location /encryption/ {
  set $target http://encryption.{{ namespace }}.svc.cluster.local;
  rewrite ^/encryption/(.*) /$1 break;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
  proxy_set_header X-Scheme $scheme;
  proxy_connect_timeout 1;
  proxy_send_timeout 30;
  proxy_read_timeout 40;
  proxy_set_header    X-Forwarded-Proto $scheme;
  proxy_set_header    X-Forwarded-For   $http_x_forwarded_for;
  proxy_set_header X-Request-ID $sb_request_id;
  proxy_pass $target;
  }
  location ~* ^/assets/public/(.*) {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/javascript;
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }
    set $bucket        "{{upstream_url}}";
    set $url_full         '$1';
    proxy_http_version     1.1;
    proxy_set_header       Host "{{upstream_url.split('/')[0]|lower}}";
    proxy_set_header       Authorization '';
    proxy_hide_header      Access-Control-Allow-Origin;
    proxy_hide_header      Access-Control-Allow-Methods;
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      Set-Cookie;
    proxy_ignore_headers   "Set-Cookie";
    proxy_buffering        off;
    proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*";
        add_header             Access-Control-Allow-Methods GET;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass             https://$bucket/$url_full;
}
 location ~* ^/content/preview/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }
    set $s3_bucket        "{{plugin_upstream_url}}";
    set $url_full         '$1';
    proxy_http_version     1.1;
    proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
    proxy_set_header       Authorization '';
    proxy_hide_header      Access-Control-Allow-Origin;
    proxy_hide_header      Access-Control-Allow-Methods;
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      Set-Cookie;
    proxy_ignore_headers   "Set-Cookie";
    proxy_buffering        off;
    proxy_intercept_errors on;
    add_header             Access-Control-Allow-Origin "*" ;
    add_header             Access-Control-Allow-Methods GET;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass             https://$s3_bucket/v3/preview/$url_full;
}
 location ~ /content-editor/telemetry|collection-editor/telemetry {
    rewrite ^/(.*) /$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://player;
  }
location ~* ^/content-editor/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }
    set $s3_bucket        "{{plugin_upstream_url}}";
    set $url_full         '$1';
    proxy_http_version     1.1;
    proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
    proxy_set_header       Authorization '';
    proxy_hide_header      Access-Control-Allow-Origin;
    proxy_hide_header      Access-Control-Allow-Methods;
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      Set-Cookie;
    proxy_ignore_headers   "Set-Cookie";
    proxy_buffering        off;
    proxy_intercept_errors on;
    add_header             Access-Control-Allow-Origin "*" ;
    add_header             Access-Control-Allow-Methods GET;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass             https://$s3_bucket/content-editor/$url_full;
}
  location ~* ^/collection-editor/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }
    set $s3_bucket        "{{plugin_upstream_url}}";
    set $url_full         '$1';
    proxy_http_version     1.1;
    proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
    proxy_set_header       Authorization '';
    proxy_hide_header      Access-Control-Allow-Origin;
    proxy_hide_header      Access-Control-Allow-Methods;
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      Set-Cookie;
    proxy_ignore_headers   "Set-Cookie";
    proxy_buffering        off;
    proxy_intercept_errors on;
    add_header             Access-Control-Allow-Origin "*" ;
    add_header             Access-Control-Allow-Methods GET;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass             https://$s3_bucket/collection-editor/$url_full;
}
  location ~* ^/generic-editor/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }
    set $s3_bucket        "{{plugin_upstream_url}}";
    set $url_full         '$1';
    proxy_http_version     1.1;
    proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
    proxy_set_header       Authorization '';
    proxy_hide_header      Access-Control-Allow-Origin;
    proxy_hide_header      Access-Control-Allow-Methods;
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      Set-Cookie;
    proxy_ignore_headers   "Set-Cookie";
    proxy_buffering        off;
    proxy_intercept_errors on;
    add_header             Access-Control-Allow-Origin "*" ;
    add_header             Access-Control-Allow-Methods GET;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass             https://$s3_bucket/generic-editor/$url_full;
}
location ~* ^/content-plugins/(.*) {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }
       set $s3_bucket        "{{plugin_upstream_url}}";
       set $url_full         '$1';
       proxy_http_version     1.1;
       proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
       proxy_set_header       Authorization '';
       proxy_hide_header      Access-Control-Allow-Origin;
       proxy_hide_header      Access-Control-Allow-Methods;
       proxy_hide_header      x-amz-id-2;
       proxy_hide_header      x-amz-request-id;
       proxy_hide_header      Set-Cookie;
       proxy_ignore_headers   "Set-Cookie";
       proxy_buffering        off;
       proxy_intercept_errors on;
       add_header             Access-Control-Allow-Origin "*";
       add_header             Access-Control-Allow-Methods GET;
       proxy_set_header X-Request-ID $sb_request_id;
       proxy_pass             https://$s3_bucket/content-plugins/$url_full;
}
  location /thirdparty {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
    rewrite ^/(.*) /$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://player;
  }
  # compression for svg certs download
  location /api/certreg/v2/certs/download {
    rewrite ^/api/(.*) /$1 break;
    include /etc/nginx/defaults.d/compression.conf;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header    X-Forwarded-For   $remote_addr;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_http_version 1.1;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://kong;
  }
  location /learner/certreg/v2/certs/download {
    # Compression
    gzip on;
    gzip_comp_level    5;
    gzip_min_length    50000; # 50KB
    gzip_proxied       any;
    gzip_vary          on;
    # Content types for compression
    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    add_header test hello;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://player;
  }
  location = / {
    return 301 https://{{ igot_server_name }}/igot;
  }
  location / {
    rewrite ^/(.*) /$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://player;
  }
  location /v3/device/register {
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://kong;
    proxy_set_header Connection "";
    rewrite ^/v3/device/register/(.*) /v3/device/register/$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_http_version 1.1;
  }
  location /action/data/v3/metrics {
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://kong;
    proxy_set_header Connection "";
    rewrite ^/action/data/v3/metrics/(.*) /data/v3/metrics/$1 break;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
  }
  location  ~ /resourcebundles/v1/read|/learner/data/v1/(role/read|system/settings/get)|/v1/tenant/info  {
    # Enabling compression
    #include /etc/nginx/defaults.d/compression.conf;
    # Enabling caching
    # caching include Accept-Encoding header also, to provide gziped or plain content as per request
    #proxy_cache_key "$http_accept_encoding|$request_uri|$request_body";
    #proxy_cache framework_cache;
    #add_header X-Proxy-Cache $upstream_cache_status;
    #add_header X-Proxy-Cache-Date $upstream_http_date;
    #proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    #proxy_cache_revalidate on;
    #proxy_cache_background_update on;
    #proxy_cache_lock on;
    #proxy_cache_valid 200 43200;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass http://player;
  }
  location ~ ^/chatapi/ {
    set $target http://router-service.{{ namespace }}.svc.cluster.local:8000;
    rewrite ^/chatapi/(.*) /$1 break;
    proxy_pass $target;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
  }
  location /oauth2callback {
    return 200 'OK';
    add_header Content-Type text/plain;
  }
}
